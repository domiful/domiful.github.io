(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{"./app/containers/FeaturePage/index.js":function(e,t,o){"use strict";o.r(t);var a,n=o("./node_modules/react/index.js"),i=o.n(n),s=o("./node_modules/react-helmet/lib/Helmet.js"),r=(o("./app/containers/FeaturePage/style.scss"),a="function"==typeof Symbol&&Symbol.for&&Symbol.for("react.element")||60103,function(e,t,o,n){var i=e&&e.defaultProps,s=arguments.length-3;if(t||0===s||(t={}),t&&i)for(var r in i)void 0===t[r]&&(t[r]=i[r]);else t||(t=i||{});if(1===s)t.children=n;else if(s>1){for(var l=Array(s),d=0;d<s;d++)l[d]=arguments[d+3];t.children=l}return{$$typeof:a,type:e,key:void 0===o?null:""+o,ref:null,props:t,_owner:null}}),l=function(){function e(e,t){for(var o=0;o<t.length;o++){var a=t[o];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,o,a){return o&&e(t.prototype,o),a&&e(t,a),t}}();var d=r("div",{className:"feature-page"},void 0,r(s.Helmet,{},void 0,r("title",{},void 0,"Feature Page"),r("meta",{name:"description",content:"Feature page of React.js Boilerplate application"})),r("h1",{},void 0,"Features"),r("ul",{},void 0,r("li",{},void 0,r("p",{className:"title"},void 0,"Next generation JavaScript"),r("p",{},void 0,"Use template strings, object destructuring, arrow functions, JSX syntax and more, today.")),r("li",{},void 0,r("p",{className:"title"},void 0,"Instant feedback"),r("p",{},void 0,"Enjoy the best DX and code your app at the speed of thought! Your saved changes to the CSS and JS are reflected instantaneously without refreshing the page. Preserve application state even when you update something in the underlying code!")),r("li",{},void 0,r("p",{className:"title"},void 0,"Industry-standard routing"),r("p",{},void 0,"Write composable CSS that's co-located with your components for complete modularity. Unique generated class names keep the specificity low while eliminating style clashes. Ship only the styles that are on the page for the best performance.")),r("li",{},void 0,r("p",{className:"title"},void 0,"The Best Test Setup"),r("p",{},void 0,"Automatically guarantee code quality and non-breaking changes. (Seen a react app with 99% test coverage before?)"))),r("h1",{},void 0,"Features"),r("ul",{},void 0,r("li",{},void 0,r("p",{className:"title"},void 0,"Next generation JavaScript"),r("p",{},void 0,"Use template strings, object destructuring, arrow functions, JSX syntax and more, today.")),r("li",{},void 0,r("p",{className:"title"},void 0,"Instant feedback"),r("p",{},void 0,"Enjoy the best DX and code your app at the speed of thought! Your saved changes to the CSS and JS are reflected instantaneously without refreshing the page. Preserve application state even when you update something in the underlying code!")),r("li",{},void 0,r("p",{className:"title"},void 0,"Industry-standard routing"),r("p",{},void 0,"Write composable CSS that's co-located with your components for complete modularity. Unique generated class names keep the specificity low while eliminating style clashes. Ship only the styles that are on the page for the best performance.")),r("li",{},void 0,r("p",{className:"title"},void 0,"The Best Test Setup"),r("p",{},void 0,"Automatically guarantee code quality and non-breaking changes. (Seen a react app with 99% test coverage before?)"))),r("h1",{},void 0,"Features"),r("ul",{},void 0,r("li",{},void 0,r("p",{className:"title"},void 0,"Next generation JavaScript"),r("p",{},void 0,"Use template strings, object destructuring, arrow functions, JSX syntax and more, today.")),r("li",{},void 0,r("p",{className:"title"},void 0,"Instant feedback"),r("p",{},void 0,"Enjoy the best DX and code your app at the speed of thought! Your saved changes to the CSS and JS are reflected instantaneously without refreshing the page. Preserve application state even when you update something in the underlying code!")),r("li",{},void 0,r("p",{className:"title"},void 0,"Industry-standard routing"),r("p",{},void 0,"Write composable CSS that's co-located with your components for complete modularity. Unique generated class names keep the specificity low while eliminating style clashes. Ship only the styles that are on the page for the best performance.")),r("li",{},void 0,r("p",{className:"title"},void 0,"The Best Test Setup"),r("p",{},void 0,"Automatically guarantee code quality and non-breaking changes. (Seen a react app with 99% test coverage before?)"))),r("i",{},void 0,"and much more...")),c=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,i.a.Component),l(t,[{key:"shouldComponentUpdate",value:function(){return!1}},{key:"render",value:function(){return d}}]),t}();o.d(t,"default",function(){return c})},"./app/containers/FeaturePage/style.scss":function(e,t,o){var a=o("./node_modules/css-loader/index.js!./node_modules/sass-loader/lib/loader.js!./app/containers/FeaturePage/style.scss");"string"==typeof a&&(a=[[e.i,a,""]]);var n={hmr:!0,transform:void 0,insertInto:void 0};o("./node_modules/style-loader/lib/addStyles.js")(a,n);a.locals&&(e.exports=a.locals)},"./node_modules/css-loader/index.js!./node_modules/sass-loader/lib/loader.js!./app/containers/FeaturePage/style.scss":function(e,t,o){(e.exports=o("./node_modules/css-loader/lib/css-base.js")(!1)).push([e.i,".feature-page h1{font-size:2em;margin-bottom:.25em}.feature-page ul{font-family:Georgia,Times,Times New Roman,serif;padding-left:1.75em}.feature-page ul li{margin:1em 0}.feature-page ul li p.title{font-weight:700}",""])}}]);